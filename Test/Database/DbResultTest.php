<?php

namespace YapepBase\Test\Database;

/**
 * Test class for DbResult.
 * Generated by PHPUnit on 2012-02-01 at 12:21:55.
 */
class DbResultTest extends \PHPUnit_Framework_TestCase {
	public function testFetchAll() {
		$data = array(array('column1' => 'data1', 'column2' => 'data2'));
		$statement = new \YapepBase\Test\Mock\Database\PDOStatementMock($data);
		$result = new \YapepBase\Database\DbResult($statement);
		$this->assertEquals($data, $result->fetchAll());
	}

	public function testColumn() {
		$data = array(array('column1' => 'data1', 'column2' => 'data2'),
			array('column1' => 'data3', 'column2' => 'data4'));
		$statement = new \YapepBase\Test\Mock\Database\PDOStatementMock($data);
		$result = new \YapepBase\Database\DbResult($statement);
		$this->assertEquals('data1', $result->fetchColumn(0));
		$this->assertEquals('data4', $result->fetchColumn(1));
	}

	public function testArray() {
		$data = array(
			array('column1' => 'data1', 'column2' => 'data2'),
			array('column1' => 'data3', 'column2' => 'data4'),
			array('column1' => 'data5', 'column2' => 'data6'),
		);
		$statement = new \YapepBase\Test\Mock\Database\PDOStatementMock($data);
		$result = new \YapepBase\Database\DbResult($statement);
		$this->assertEquals(true, $result->valid());
		$this->assertEquals(array('column1' => 'data1', 'column2' => 'data2'), $result->current());
		$this->assertEquals(array('column1' => 'data1', 'column2' => 'data2'), $result->current());
		$this->assertEquals(0, $result->key());
		$this->assertEquals(true, $result->valid());
		$this->assertEquals(array('column1' => 'data3', 'column2' => 'data4'), $result->next());
		$this->assertEquals(array('column1' => 'data3', 'column2' => 'data4'), $result->current());
		$this->assertEquals(1, $result->key());
		$this->assertEquals(true, $result->valid());
		$this->assertEquals(array('column1' => 'data5', 'column2' => 'data6'), $result->fetch());
		$this->assertEquals(array('column1' => 'data5', 'column2' => 'data6'), $result->current());
		$result->rewind();
		$this->assertEquals(array('column1' => 'data5', 'column2' => 'data6'), $result->current());
		$this->assertEquals(2, $result->key());
		$this->assertEquals(true, $result->valid());
		$this->assertEquals(false, $result->next());
		$this->assertEquals(false, $result->valid());
		$this->assertEquals(false, $result->key());

		$statement = new \YapepBase\Test\Mock\Database\PDOStatementMock($data);
		$result = new \YapepBase\Database\DbResult($statement);
		$this->assertEquals(0, $result->key());

		$statement = new \YapepBase\Test\Mock\Database\PDOStatementMock($data);
		$result = new \YapepBase\Database\DbResult($statement);
		$this->assertEquals(array('column1' => 'data1', 'column2' => 'data2'), $result->current());
	}
}
